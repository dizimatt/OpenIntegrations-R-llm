<!DOCTYPE html>
<html>
  <head>
    <title>Shopify Embedded App</title>
    <script src="https://cdn.jsdelivr.net/npm/jquery"></script>
    <style>
      body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        line-height: 1.5;
        padding: 20px;
      }
      h1 {
        color: #212b36;
      }
      h2 {
        color: #5c6ac4;
        margin-top: 30px;
      }
      .card {
        border: 1px solid #dfe3e8;
        border-radius: 4px;
        padding: 15px;
        margin-bottom: 20px;
        background-color: #ffffff;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      }
      .card-header {
        font-weight: bold;
        margin-bottom: 10px;
        border-bottom: 1px solid #dfe3e8;
        padding-bottom: 10px;
      }
      .card-body {
        padding: 5px 0;
      }
      .tag {
        display: inline-block;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 500;
        margin-right: 5px;
      }
      .tag-active {
        background-color: #f4f6f8;
        color: #5c6ac4;
        border: 1px solid #5c6ac4;
      }
      .tag-paid {
        background-color: #e3f1df;
        color: #108043;
      }
      .tag-unpaid {
        background-color: #fbeae5;
        color: #de3618;
      }
      .tag-fulfilled {
        background-color: #e3f1df;
        color: #108043;
      }
      .tag-unfulfilled {
        background-color: #f9fafb;
        color: #637381;
      }
      .tag-partial {
        background-color: #f4f6f8;
        color: #212b36;
      }
      .container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
      }
      .section {
        flex: 1;
        min-width: 300px;
      }
      .loading {
        color: #637381;
        font-style: italic;
      }
      button {
        background-color: #5c6ac4;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
      }
      button:hover {
        background-color: #202e78;
      }
      .input-group {
        margin-bottom: 15px;
      }
      input[type="text"] {
        padding: 8px;
        border: 1px solid #dfe3e8;
        border-radius: 4px;
        width: 100%;
        max-width: 300px;
      }
      .webhooks-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
      }
      
      .webhooks-table th, .webhooks-table td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
      }
      
      .webhooks-table th {
        background-color: #f4f6f8;
        font-weight: 500;
      }
      
      .btn-primary {
        background-color: #5c6ac4;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        margin-bottom: 15px;
      }
      
      .delete-webhook {
        background-color: #fbeae5;
        color: #de3618;
        border: 1px solid #de3618;
        padding: 4px 8px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 12px;
      }
    </style>
  </head>
  <body>
    <h1>Shopify Embedded App Dashboard</h1>
    <h2>Shop: <%= shop %></h2>
    
    <div class="section" id="webhooks-section">
      <h2>Webhook Management</h2>
      <div class="card">
        <div class="card-header">
          Cart Update Webhooks
        </div>
        <div class="card-body">
          <p>Register webhooks to receive cart update notifications.</p>
          <button id="register-webhooks" class="btn-primary">Register Webhooks</button>
          <div id="webhooks-status" class="loading">Loading webhooks...</div>
        </div>
      </div>
    </div>

    <div class="container">
      <div class="section">
        <h2>Recent Orders</h2>
        <div id="orders" class="loading">Loading orders...</div>
      </div>
      
      <div class="section">
        <h2>Active Carts</h2>
        <div id="carts" class="loading">Loading active carts...</div>
      </div>
    </div>

    <div class="section">
      <h2>LLM Assistant</h2>
      <div class="input-group">
        <input type="text" id="llm-query" placeholder="Ask something about your store...">
        <button onclick="askLLM()">Ask AI</button>
      </div>
      <div id="llm-response" class="card"></div>
    </div>

    <script>
      const shop = '<%= shop %>';

      $(document).ready(function() {
        if (!shop) {
          alert('Missing shop parameter');
          return;
        }

        // Load webhooks
        loadWebhooks();
    
        // Register webhooks button
        $('#register-webhooks').on('click', function() {
          $(this).prop('disabled', true).text('Registering...');
          
          $.get('/webhooks/register?shop=' + shop, function(data) {
            if (data.success) {
              alert('Webhooks registered successfully!');
              loadWebhooks();
            } else {
              alert('Error registering webhooks');
              console.error(data);
            }
            $('#register-webhooks').prop('disabled', false).text('Register Webhooks');
          }).fail(function(err) {
            alert('Error registering webhooks');
            console.error(err);
            $('#register-webhooks').prop('disabled', false).text('Register Webhooks');
          });
        });

        // Fetch orders
        $.get('/api/orders?shop=' + shop, function(data) {
          displayOrders(data);
        }).fail(function(err) {
          console.error('Orders API call failed:', err);
          $('#orders').html('<p>Failed to load orders.</p>');
        });
        
        // Fetch active carts
        $.get('/api/active-carts?shop=' + shop, function(data) {
          displayActiveCarts(data);
        }).fail(function(err) {
          console.error('Active carts API call failed:', err);
          
          // Check if this is a permissions error that requires re-auth
          if (err.responseJSON && err.responseJSON.action === 'reauth') {
            $('#carts').html(
              '<div class="card">' +
              '<div class="card-header">Additional Permissions Required</div>' +
              '<div class="card-body">' +
              '<p>' + err.responseJSON.message + '</p>' +
              '<button onclick="window.location.href=\'' + err.responseJSON.reauth_url + '\'">Grant Permissions</button>' +
              '</div>' +
              '</div>'
            );
          } else {
            $('#carts').html('<p>Failed to load active carts.</p>');
          }
        });
      });
      function loadWebhooks() {
        $('#webhooks-status').html('<p>Loading webhooks...</p>');
        
        $.get('/webhooks/list?shop=' + shop, function(data) {
          if (data.webhooks && data.webhooks.length > 0) {
            let html = '<table class="webhooks-table">' +
                      '<tr><th>Topic</th><th>Address</th><th>Created</th><th>Actions</th></tr>';
            
            data.webhooks.forEach(webhook => {
              const createdDate = new Date(webhook.createdAt).toLocaleString();
              html += '<tr>' +
                      '<td>' + webhook.topic + '</td>' +
                      '<td>' + webhook.address + '</td>' +
                      '<td>' + createdDate + '</td>' +
                      '<td><button class="delete-webhook" data-id="' + webhook.webhookId + '">Delete</button></td>' +
                      '</tr>';
            });
            
            html += '</table>';
            $('#webhooks-status').html(html);
            
            // Attach delete handlers
            $('.delete-webhook').on('click', function() {
              const webhookId = $(this).data('id');
              deleteWebhook(webhookId);
            });
          } else {
            $('#webhooks-status').html('<p>No webhooks registered yet.</p>');
          }
        }).fail(function(err) {
          $('#webhooks-status').html('<p>Error loading webhooks.</p>');
          console.error(err);
        });
      }
      
      function deleteWebhook(webhookId) {
        if (confirm('Are you sure you want to delete this webhook?')) {
          $.ajax({
            url: '/webhooks/' + webhookId + '?shop=' + shop,
            type: 'DELETE',
            success: function(data) {
              alert('Webhook deleted successfully');
              loadWebhooks();
            },
            error: function(err) {
              alert('Error deleting webhook');
              console.error(err);
            }
          });
        }
      }
      // end of webhooks

      function displayOrders(data) {
        if (!data || !data.orders || !data.orders.edges || !data.orders.edges.length) {
          $('#orders').html('<p>No orders found.</p>');
          return;
        }

        let html = '';
        data.orders.edges.forEach(edge => {
          const order = edge.node;
          
          html += '<div class="card">' +
            '<div class="card-header">' +
            order.name + ' ' + 
            '</div>' +
            '<div class="card-body">' +
            '<p>Date: ' + new Date(order.createdAt).toLocaleString() + '</p>' +
            '<p>Customer: ' + (order.customer ? (order.customer.firstName + ' ' + order.customer.lastName) : 'Anonymous') + '</p>' +
            '<p>Email: ' + (order.customer ? order.customer.email : 'N/A') + '</p>' +
            '<p>Total: ' + order.totalPriceSet.shopMoney.amount + ' ' + order.totalPriceSet.shopMoney.currencyCode + '</p>' +
            '</div>' +
            '</div>';
        });

        $('#orders').html(html);
      }

      function displayActiveCarts(data) {
        if (!data || !data.carts || !data.carts.edges || !data.carts.edges.length) {
          $('#carts').html('<p>No active carts found.</p>');
          return;
        }

        let html = '';
        data.carts.edges.forEach(edge => {
          const cart = edge.node;
          
          // Calculate total items
          let totalItems = 0;
          if (cart.lineItems && cart.lineItems.edges) {
            cart.lineItems.edges.forEach(item => {
              totalItems += item.node.quantity || 1;
            });
          }
          
          const cartCreated = new Date(cart.createdAt).toLocaleString();
          const cartUpdated = new Date(cart.updatedAt).toLocaleString();
          
          html += '<div class="card">' +
            '<div class="card-header">' +
            (cart.name || 'Draft Order') + ' ' +
            '<span class="tag tag-active">Active</span>' +
            '</div>' +
            '<div class="card-body">' +
            '<p>Created: ' + cartCreated + '</p>' +
            '<p>Last activity: ' + cartUpdated + '</p>' +
            '<p>Items: ' + totalItems + ' (' + cart.lineItems.edges.length + ' unique)</p>' +
            '<p>Customer: ' + (cart.customer ? (cart.customer.firstName + ' ' + cart.customer.lastName) : 'Anonymous') + '</p>' +
            '<p>Email: ' + (cart.customer ? cart.customer.email : 'N/A') + '</p>' +
            '<p>Subtotal: ' + (cart.subtotalPrice || '0.00') + ' ' + (cart.currencyCode || 'USD') + '</p>' +
            '<p>Total: ' + (cart.totalPrice || '0.00') + ' ' + (cart.currencyCode || 'USD') + '</p>' +
            '</div>' +
            '</div>';
            console.log('Cart line items: %o', cart.lineItems);
          });

        if (html === '') {
          $('#carts').html('<p>No active carts found.</p>');
        } else {
          $('#carts').html(html);
        }
      }

      // Note: Financial and fulfillment status tags removed as these fields aren't available in the current GraphQL schema

      function askLLM() {
        const query = $('#llm-query').val();
        if (!query) return;

        $('#llm-response').html('Thinking...');

        $.ajax({
          url: '/api/llm/chat',
          method: 'POST',
          data: JSON.stringify({
            query: query,
            provider: 'openai', // or 'claude'
            context: {
              systemPrompt: 'You are a helpful assistant for a Shopify store.',
              temperature: 0.7
            },
            shop: shop
          }),
          contentType: 'application/json',
          success: function(data) {
            $('#llm-response').html('<p><strong>Response:</strong></p><p>' + data.response + '</p>');
          },
          error: function(err) {
            console.error('LLM API call failed:', err);
            $('#llm-response').html('<p>Failed to get response.</p>');
          }
        });
      }
    </script>
  </body>
</html>